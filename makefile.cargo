ifeq (androideabi,$(findstring androideabi,$(TARGET)))

CC := $(TARGET)-gcc
AR := $(TARGET)-ar

else

CC ?= gcc
AR ?= ar

endif

ifeq (darwin,$(findstring darwin,$(TARGET)))
    OSTYPE=darwin
endif
ifeq (linux,$(findstring linux,$(TARGET)))
    OSTYPE=linux
endif
ifeq (androideabi,$(findstring androideabi,$(TARGET)))
    OSTYPE=android
endif
ifeq (windows,$(findstring windows,$(TARGET)))
    OSTYPE=windows
    # cargo sets `$(OUT_DIR)` as native windows path. msys requires cygpath.
    OUT_DIR:=$(shell cygpath "$(OUT_DIR)")
    # msys sets `CC=cc` but there's no `cc.exe`. so we change it here.
    ifeq (cc,$(CC))
        CC:=gcc
    endif
endif

C_SRC = \
	harfbuzz/src/hb-blob.cc \
	harfbuzz/src/hb-buffer.cc \
	harfbuzz/src/hb-common.cc \
	harfbuzz/src/hb-fallback-shape.cc \
	harfbuzz/src/hb-font.cc \
	harfbuzz/src/hb-ot-layout.cc \
	harfbuzz/src/hb-ot-map.cc \
	harfbuzz/src/hb-ot-shape.cc \
	harfbuzz/src/hb-ot-shape-complex-arabic.cc \
	harfbuzz/src/hb-ot-shape-complex-indic.cc \
	harfbuzz/src/hb-ot-shape-complex-misc.cc \
	harfbuzz/src/hb-ot-shape-normalize.cc \
	harfbuzz/src/hb-ot-shape-fallback.cc \
	harfbuzz/src/hb-ot-tag.cc \
	harfbuzz/src/hb-set.cc \
	harfbuzz/src/hb-shape.cc \
	harfbuzz/src/hb-shape-plan.cc \
	harfbuzz/src/hb-shaper.cc \
	harfbuzz/src/hb-tt-font.cc \
	harfbuzz/src/hb-unicode.cc \
	harfbuzz/src/hb-warning.cc \
	$(NULL)

HBFLAGS = -DHAVE_OT

ifeq ($(OSTYPE),darwin)
endif

ifeq ($(OSTYPE),linux)
	C_SRC += \
		harfbuzz/src/hb-ft.cc \
		harfbuzz/src/hb-glib.cc \
		harfbuzz/src/hb-gobject-structs.cc \
		$(NULL)
	CFLAGS += $(shell pkg-config --cflags glib-2.0 freetype2)
	HBFLAGS += -DHAVE_GLIB
endif

ifeq ($(OSTYPE),android)
endif

ifeq ($(OSTYPE),windows)
endif

C_OBJS = $(patsubst %.cc,$(OUT_DIR)/%.o,$(C_SRC))
CFLAGS += -Iharfbuzz/src $(HBFLAGS) -fPIC -O2

.PHONY: all
all: $(OUT_DIR)/libharfbuzz.a

$(OUT_DIR)/libharfbuzz.a: $(C_OBJS)
	$(AR) rcs $@ $^

$(OUT_DIR)/harfbuzz/src/%.o: harfbuzz/src/%.cc
	mkdir -p `dirname $@` && $(CC) $(CFLAGS) -include symbols.txt -o $@ -c $<
